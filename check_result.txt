==== 正常パターンチェック ===

==== GET /posts リクエストチェック ===
レスポンスの詳細 :  {
  "posts": []
}
成功

==== GET /posts/:post_id/comments リクエストチェック ===
レスポンスの詳細 :  {
  "comments": []
}
成功

==== POST /posts/create リクエストチェック ===
レスポンスの詳細 :  {
  "result": "OK"
}
成功

==== POST /posts/:post_id/comments/create リクエストチェック ===
レスポンスの詳細 :  {
  "result": "OK"
}
成功

==== 非正常パターンのチェック ===

==== POST /posts/create テキストの長さが0 ===
レスポンスの詳細 :  {
  "result": "NG",
  "message": {
    "text": [
      "This field cannot be blank."
    ]
  }
}
成功

==== POST /posts/create テキストの長さが101 ===
レスポンスの詳細 :  {
  "result": "NG",
  "message": {
    "text": [
      "Ensure this value has at most 100 characters (it has 101)."
    ]
  }
}
成功

==== POST /posts/create 存在しないuser_idを指定 ===
レスポンスの詳細 :  {
  "result": "NG",
  "message": "badly formed hexadecimal UUID string"
}
成功

==== POST /posts/:post_id/comments/create テキストの長さが0 ===
レスポンスの詳細 :  {
  "result": "NG",
  "message": {
    "text": [
      "This field cannot be blank."
    ]
  }
}
成功

==== POST /posts/:post_id/comments/create テキストの長さが101 ===
レスポンスの詳細 :  {
  "result": "NG",
  "message": {
    "text": [
      "Ensure this value has at most 100 characters (it has 101)."
    ]
  }
}
成功

==== POST /posts/:post_id/comments/create 存在しないuser_idを指定 ===
レスポンスの詳細 :  {
  "result": "NG",
  "message": "badly formed hexadecimal UUID string"
}
成功

==== POST /posts/:post_id/comments/create 存在しないpost_idを指定 ===
レスポンスの詳細 :  {
  "result": "NG",
  "message": "badly formed hexadecimal UUID string"
}
成功

チェックをパスした数: 11/11
全てのチェックに成功しました.
